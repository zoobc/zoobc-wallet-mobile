/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.model.AccountBalance', null, global);
goog.exportSymbol('proto.model.GetAccountBalanceRequest', null, global);
goog.exportSymbol('proto.model.GetAccountBalanceResponse', null, global);
goog.exportSymbol('proto.model.GetAccountBalancesRequest', null, global);
goog.exportSymbol('proto.model.GetAccountBalancesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.AccountBalance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.AccountBalance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.AccountBalance.displayName = 'proto.model.AccountBalance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetAccountBalanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetAccountBalanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetAccountBalanceRequest.displayName = 'proto.model.GetAccountBalanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetAccountBalanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetAccountBalanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetAccountBalanceResponse.displayName = 'proto.model.GetAccountBalanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetAccountBalancesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetAccountBalancesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetAccountBalancesRequest.displayName = 'proto.model.GetAccountBalancesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetAccountBalancesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.GetAccountBalancesResponse.repeatedFields_, null);
};
goog.inherits(proto.model.GetAccountBalancesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetAccountBalancesResponse.displayName = 'proto.model.GetAccountBalancesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.AccountBalance.prototype.toObject = function(opt_includeInstance) {
  return proto.model.AccountBalance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.AccountBalance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.AccountBalance.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountaddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockheight: jspb.Message.getFieldWithDefault(msg, 2, 0),
    spendablebalance: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    balance: jspb.Message.getFieldWithDefault(msg, 4, "0"),
    poprevenue: jspb.Message.getFieldWithDefault(msg, 5, "0"),
    latest: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.AccountBalance}
 */
proto.model.AccountBalance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.AccountBalance;
  return proto.model.AccountBalance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.AccountBalance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.AccountBalance}
 */
proto.model.AccountBalance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountaddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setSpendablebalance(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setBalance(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setPoprevenue(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLatest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.AccountBalance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.AccountBalance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.AccountBalance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.AccountBalance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountaddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSpendablebalance();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      3,
      f
    );
  }
  f = message.getBalance();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      4,
      f
    );
  }
  f = message.getPoprevenue();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      5,
      f
    );
  }
  f = message.getLatest();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string AccountAddress = 1;
 * @return {string}
 */
proto.model.AccountBalance.prototype.getAccountaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.model.AccountBalance.prototype.setAccountaddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 BlockHeight = 2;
 * @return {number}
 */
proto.model.AccountBalance.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.AccountBalance.prototype.setBlockheight = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 SpendableBalance = 3;
 * @return {string}
 */
proto.model.AccountBalance.prototype.getSpendablebalance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/** @param {string} value */
proto.model.AccountBalance.prototype.setSpendablebalance = function(value) {
  jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional int64 Balance = 4;
 * @return {string}
 */
proto.model.AccountBalance.prototype.getBalance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, "0"));
};


/** @param {string} value */
proto.model.AccountBalance.prototype.setBalance = function(value) {
  jspb.Message.setProto3StringIntField(this, 4, value);
};


/**
 * optional int64 PopRevenue = 5;
 * @return {string}
 */
proto.model.AccountBalance.prototype.getPoprevenue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, "0"));
};


/** @param {string} value */
proto.model.AccountBalance.prototype.setPoprevenue = function(value) {
  jspb.Message.setProto3StringIntField(this, 5, value);
};


/**
 * optional bool Latest = 6;
 * @return {boolean}
 */
proto.model.AccountBalance.prototype.getLatest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.model.AccountBalance.prototype.setLatest = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetAccountBalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetAccountBalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetAccountBalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetAccountBalanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountaddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetAccountBalanceRequest}
 */
proto.model.GetAccountBalanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetAccountBalanceRequest;
  return proto.model.GetAccountBalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetAccountBalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetAccountBalanceRequest}
 */
proto.model.GetAccountBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountaddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetAccountBalanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetAccountBalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetAccountBalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetAccountBalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountaddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string AccountAddress = 1;
 * @return {string}
 */
proto.model.GetAccountBalanceRequest.prototype.getAccountaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.model.GetAccountBalanceRequest.prototype.setAccountaddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetAccountBalanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetAccountBalanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetAccountBalanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetAccountBalanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountbalance: (f = msg.getAccountbalance()) && proto.model.AccountBalance.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetAccountBalanceResponse}
 */
proto.model.GetAccountBalanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetAccountBalanceResponse;
  return proto.model.GetAccountBalanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetAccountBalanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetAccountBalanceResponse}
 */
proto.model.GetAccountBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.AccountBalance;
      reader.readMessage(value,proto.model.AccountBalance.deserializeBinaryFromReader);
      msg.setAccountbalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetAccountBalanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetAccountBalanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetAccountBalanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetAccountBalanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountbalance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.model.AccountBalance.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccountBalance AccountBalance = 1;
 * @return {?proto.model.AccountBalance}
 */
proto.model.GetAccountBalanceResponse.prototype.getAccountbalance = function() {
  return /** @type{?proto.model.AccountBalance} */ (
    jspb.Message.getWrapperField(this, proto.model.AccountBalance, 1));
};


/** @param {?proto.model.AccountBalance|undefined} value */
proto.model.GetAccountBalanceResponse.prototype.setAccountbalance = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.GetAccountBalanceResponse.prototype.clearAccountbalance = function() {
  this.setAccountbalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.GetAccountBalanceResponse.prototype.hasAccountbalance = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetAccountBalancesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetAccountBalancesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetAccountBalancesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetAccountBalancesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    balancelowerthan: jspb.Message.getFieldWithDefault(msg, 1, 0),
    balancehigherthan: jspb.Message.getFieldWithDefault(msg, 2, 0),
    spendablebalancelowerthan: jspb.Message.getFieldWithDefault(msg, 3, 0),
    spendablebalancehigherthan: jspb.Message.getFieldWithDefault(msg, 4, 0),
    poprevenuebalancelowerthan: jspb.Message.getFieldWithDefault(msg, 5, 0),
    poprevenuebalancehigherthan: jspb.Message.getFieldWithDefault(msg, 6, 0),
    blockheight: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetAccountBalancesRequest}
 */
proto.model.GetAccountBalancesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetAccountBalancesRequest;
  return proto.model.GetAccountBalancesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetAccountBalancesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetAccountBalancesRequest}
 */
proto.model.GetAccountBalancesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBalancelowerthan(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBalancehigherthan(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSpendablebalancelowerthan(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSpendablebalancehigherthan(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPoprevenuebalancelowerthan(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPoprevenuebalancehigherthan(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetAccountBalancesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetAccountBalancesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetAccountBalancesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetAccountBalancesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalancelowerthan();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getBalancehigherthan();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSpendablebalancelowerthan();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getSpendablebalancehigherthan();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getPoprevenuebalancelowerthan();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getPoprevenuebalancehigherthan();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional uint32 BalanceLowerThan = 1;
 * @return {number}
 */
proto.model.GetAccountBalancesRequest.prototype.getBalancelowerthan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetAccountBalancesRequest.prototype.setBalancelowerthan = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 BalanceHigherThan = 2;
 * @return {number}
 */
proto.model.GetAccountBalancesRequest.prototype.getBalancehigherthan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.GetAccountBalancesRequest.prototype.setBalancehigherthan = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 SpendableBalanceLowerThan = 3;
 * @return {number}
 */
proto.model.GetAccountBalancesRequest.prototype.getSpendablebalancelowerthan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.model.GetAccountBalancesRequest.prototype.setSpendablebalancelowerthan = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 SpendableBalanceHigherThan = 4;
 * @return {number}
 */
proto.model.GetAccountBalancesRequest.prototype.getSpendablebalancehigherthan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.model.GetAccountBalancesRequest.prototype.setSpendablebalancehigherthan = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 PopRevenueBalanceLowerThan = 5;
 * @return {number}
 */
proto.model.GetAccountBalancesRequest.prototype.getPoprevenuebalancelowerthan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.model.GetAccountBalancesRequest.prototype.setPoprevenuebalancelowerthan = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 PopRevenueBalanceHigherThan = 6;
 * @return {number}
 */
proto.model.GetAccountBalancesRequest.prototype.getPoprevenuebalancehigherthan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.model.GetAccountBalancesRequest.prototype.setPoprevenuebalancehigherthan = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 BlockHeight = 7;
 * @return {number}
 */
proto.model.GetAccountBalancesRequest.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.model.GetAccountBalancesRequest.prototype.setBlockheight = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.GetAccountBalancesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetAccountBalancesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetAccountBalancesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetAccountBalancesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetAccountBalancesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountbalancesize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountbalanceList: jspb.Message.toObjectList(msg.getAccountbalanceList(),
    proto.model.AccountBalance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetAccountBalancesResponse}
 */
proto.model.GetAccountBalancesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetAccountBalancesResponse;
  return proto.model.GetAccountBalancesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetAccountBalancesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetAccountBalancesResponse}
 */
proto.model.GetAccountBalancesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountbalancesize(value);
      break;
    case 2:
      var value = new proto.model.AccountBalance;
      reader.readMessage(value,proto.model.AccountBalance.deserializeBinaryFromReader);
      msg.addAccountbalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetAccountBalancesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetAccountBalancesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetAccountBalancesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetAccountBalancesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountbalancesize();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAccountbalanceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.model.AccountBalance.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 AccountBalanceSize = 1;
 * @return {number}
 */
proto.model.GetAccountBalancesResponse.prototype.getAccountbalancesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetAccountBalancesResponse.prototype.setAccountbalancesize = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated AccountBalance AccountBalance = 2;
 * @return {!Array<!proto.model.AccountBalance>}
 */
proto.model.GetAccountBalancesResponse.prototype.getAccountbalanceList = function() {
  return /** @type{!Array<!proto.model.AccountBalance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.model.AccountBalance, 2));
};


/** @param {!Array<!proto.model.AccountBalance>} value */
proto.model.GetAccountBalancesResponse.prototype.setAccountbalanceList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.model.AccountBalance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.AccountBalance}
 */
proto.model.GetAccountBalancesResponse.prototype.addAccountbalance = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.model.AccountBalance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.GetAccountBalancesResponse.prototype.clearAccountbalanceList = function() {
  this.setAccountbalanceList([]);
};


goog.object.extend(exports, proto.model);
