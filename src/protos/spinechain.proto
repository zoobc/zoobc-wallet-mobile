syntax = "proto3";

package model;

//Empty
message Empty {}

//Account
message Account {
    int64 ID = 1;
    bytes PublicKey = 2;
    model.AccountBalance AccountBalance = 3;
}

message GetAccountsResponse {
    repeated Account Accounts = 1;
}

message GetAccountByPublicKeyRequest {
    bytes PublicKey = 1;
}

//AccountBalance
message AccountBalance {
    int64 ID = 1;
    bytes PublicKey = 2;
    int64 Balance = 3;
    int64 UnconfirmedBalance = 4;
    int32 ForgedBalance = 5;
    int32 Height = 6;
}

message GetAccountBalancesRequest {}

message GetAccountBalancesResponse { 
    repeated AccountBalance AccountBalances = 1;
}

message GetAccountBalanceRequest {
    bytes PublicKey = 1; 
}

//Transaction
message Transaction {
	int64 ID = 1;
	int64 BlockID = 2;
	uint32 Deadline = 3;
	bytes SenderPublicKey = 4;
	bytes RecipientPublicKey = 5;
	int64 AmountNQT = 6;
	int64 FeeNQT = 7;
	uint32 EcBlockHeight = 8;
	int64 EcBlockID = 9;
	bytes Version = 10;
	uint32 Timestamp = 11;
	bytes Signature = 12;
	bytes Type = 13;
	bytes Subtype = 14;
	uint32 Height = 15;
	string Hash = 16;
}

message GetTransactionsByAccountPublicKeyRequest {
	bytes AccountPublicKey = 1;
}

message GetTransactionsByBlockIDRequest {
	int64 BlockID = 1;
}

message GetTransactionsResponse {
	// GetTrasactions return 
	repeated Transaction Transactions = 1;
}


// AccountService represent request on Account
service AccountService {
    rpc GetAccounts(model.Empty) returns (model.GetAccountsResponse) {}
    rpc GetAccountByPublicKey(model.GetAccountByPublicKeyRequest) returns (model.Account) {}
}

// AccountBalanceService represent request on Account Balance
service AccountBalancesService {
    rpc GetAccountBalances(model.Empty) returns (model.GetAccountBalancesResponse) {}
    rpc GetAccountBalance(model.GetAccountBalanceRequest) returns (model.AccountBalance) {}
}

//TransactionService
service TransactionService {
    rpc GetTransactionsByAccountPublicKey(model.GetTransactionsByAccountPublicKeyRequest) returns (model.GetTransactionsResponse) {}
    rpc GetTransactionsByBlockID(model.GetTransactionsByBlockIDRequest) returns (model.GetTransactionsResponse) {}
}
